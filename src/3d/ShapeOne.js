/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useFrame } from '@react-three/fiber'
import { MeshReflectorMaterial, MeshWobbleMaterial, useGLTF } from '@react-three/drei'

import { ShaderTestMaterial } from "./ShaderTestMaterial"
import { AcidMaterial } from "./AcidMaterial"
import { MeshBasicMaterial } from 'three'
import { LiquidMaterial } from './LiquidMaterial'

const shaderMat = new ShaderTestMaterial()
const acidMat = new AcidMaterial()
const liquidMat = new LiquidMaterial()


export function ShapeOne (props) {
  const group = useRef()
  const mats = [shaderMat, acidMat]
  const { nodes, materials } = useGLTF('/distorted1.glb')
  
  useFrame(() => {
    group.current.rotation.x = group.current.rotation.y += 0.001;
  });
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.distorted1.geometry}
    
        material={materials.initialShadingGroup}
        rotation={[1.72, 0.78, -0.44]}
        scale={[40.61, 40.63, 40.57]}
        
        
      />

    

      
    </group>
  )
}

useGLTF.preload('/distorted1.glb')
