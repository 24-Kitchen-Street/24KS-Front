/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useFrame } from '@react-three/fiber'
import { useGLTF } from '@react-three/drei'

import { ShaderTestMaterial } from "./ShaderTestMaterial"
import { AcidMaterial } from "./AcidMaterial"

const shaderMat = new ShaderTestMaterial()
const acidMat = new AcidMaterial()


export function ShapeOne (props) {
  const group = useRef()
  const mats = [shaderMat, acidMat]
  const { nodes, materials } = useGLTF('/twisted.glb')
  useFrame(() => {
    group.current.rotation.x = group.current.rotation.y -= 0.001;
  });
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.twisted.geometry}
        material={materials.geometry}
        rotation={[1.72, 0.78, -0.44]}
        scale={[20.61, 20.63, 20.57]}

        
      />

      
    </group>
  )
}

useGLTF.preload('/twisted.glb')
